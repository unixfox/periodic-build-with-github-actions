From a9f9d74c9448120f8f118ba13f2c3a4e7622ea49 Mon Sep 17 00:00:00 2001
From: Emilien <4016501+unixfox@users.noreply.github.com>
Date: Fri, 21 Feb 2025 22:17:06 +0100
Subject: [PATCH 1/1] cdn + hmac support

---
 nitter.example.conf   |  1 +
 src/config.nim        |  3 ++-
 src/nitter.nim        |  1 +
 src/routes/media.nim  | 16 ++++++++++++----
 src/types.nim         |  1 +
 src/utils.nim         | 27 +++++++++++++++++++--------
 src/views/general.nim |  2 +-
 src/views/rss.nimf    | 12 ++++++------
 8 files changed, 43 insertions(+), 20 deletions(-)

diff --git a/nitter.example.conf b/nitter.example.conf
index bddb9a4..dd2faef 100644
--- a/nitter.example.conf
+++ b/nitter.example.conf
@@ -26,6 +26,7 @@ enableRSS = true  # set this to false to disable RSS feeds
 enableDebug = false  # enable request logs and debug endpoints (/.sessions)
 proxy = ""  # http/https url, SOCKS proxies are not supported
 proxyAuth = ""
+cdnUrl = "https://cdn.xcancel.com"
 
 # Change default preferences here, see src/prefs_impl.nim for a complete list
 [Preferences]
diff --git a/src/config.nim b/src/config.nim
index 1b05ffe..96bf23b 100644
--- a/src/config.nim
+++ b/src/config.nim
@@ -40,7 +40,8 @@ proc getConfig*(path: string): (Config, parseCfg.Config) =
     enableRss: cfg.get("Config", "enableRSS", true),
     enableDebug: cfg.get("Config", "enableDebug", false),
     proxy: cfg.get("Config", "proxy", ""),
-    proxyAuth: cfg.get("Config", "proxyAuth", "")
+    proxyAuth: cfg.get("Config", "proxyAuth", ""),
+    cdnUrl: cfg.get("Config", "cdnUrl", "https://cdn.xcancel.com")
   )
 
   return (conf, cfg)
diff --git a/src/nitter.nim b/src/nitter.nim
index f81dc1c..14970ab 100644
--- a/src/nitter.nim
+++ b/src/nitter.nim
@@ -35,6 +35,7 @@ updateDefaultPrefs(fullCfg)
 setCacheTimes(cfg)
 setHmacKey(cfg.hmacKey)
 setProxyEncoding(cfg.base64Media)
+setCdnUrl(cfg.cdnUrl)
 setMaxHttpConns(cfg.httpMaxConns)
 setHttpProxy(cfg.proxy, cfg.proxyAuth)
 initAboutPage(cfg.staticDir)
diff --git a/src/routes/media.nim b/src/routes/media.nim
index de51061..4a7ed29 100644
--- a/src/routes/media.nim
+++ b/src/routes/media.nim
@@ -91,8 +91,12 @@ proc createMediaRouter*(cfg: Config) =
     get "/pic/?":
       resp Http404
 
-    get re"^\/pic\/orig\/(enc)?\/?(.+)":
-      var url = decoded(request, 1)
+    get re"^\/pic\/orig\/(enc)?\/?(.+)\/(.+)$":
+      var url = decoded(request, 2)
+
+      if getHmac(url) != request.matches[1]:
+        resp Http403, showError("Failed to verify signature", cfg)
+
       if "twimg.com" notin url:
         url.insert(twimg)
       if not url.startsWith(https):
@@ -105,8 +109,12 @@ proc createMediaRouter*(cfg: Config) =
       let code = await proxyMedia(request, url)
       check code
 
-    get re"^\/pic\/(enc)?\/?(.+)":
-      var url = decoded(request, 1)
+    get re"^\/pic\/(enc)?\/?(.+)\/(.+)$":
+      var url = decoded(request, 2)
+
+      if getHmac(url) != request.matches[1]:
+        resp Http403, showError("Failed to verify signature", cfg)
+
       if "twimg.com" notin url:
         url.insert(twimg)
       if not url.startsWith(https):
diff --git a/src/types.nim b/src/types.nim
index 4e565ee..6aa326b 100644
--- a/src/types.nim
+++ b/src/types.nim
@@ -271,6 +271,7 @@ type
     enableDebug*: bool
     proxy*: string
     proxyAuth*: string
+    cdnUrl*: string
 
     rssCacheTime*: int
     listCacheTime*: int
diff --git a/src/utils.nim b/src/utils.nim
index c96a6dd..cdb6f3a 100644
--- a/src/utils.nim
+++ b/src/utils.nim
@@ -1,10 +1,12 @@
 # SPDX-License-Identifier: AGPL-3.0-only
 import strutils, strformat, uri, tables, base64
 import nimcrypto
+import std/times
 
 var
   hmacKey: string
   base64Media = false
+  cdnUrl: string
 
 const
   https* = "https://"
@@ -20,34 +22,43 @@ const
     "x.com"
   ]
 
+let now = now()
+
 proc setHmacKey*(key: string) =
   hmacKey = key
 
 proc setProxyEncoding*(state: bool) =
   base64Media = state
 
+proc setCdnUrl*(url: string) =
+  cdnUrl = url
+
 proc getHmac*(data: string): string =
-  ($hmac(sha256, hmacKey, data))[0 .. 12]
+  ($hmac(sha256, hmacKey, data & intToStr(now().year + int(now().month) + now().monthDay)))[0 .. 12]
 
 proc getVidUrl*(link: string): string =
   if link.len == 0: return
   let sig = getHmac(link)
-  if base64Media:
-    &"/video/enc/{sig}/{encode(link, safe=true)}"
-  else:
+  if "m3u8" in link:
     &"/video/{sig}/{encodeUrl(link)}"
+  elif base64Media:
+    &"{cdnUrl}/video/enc/{sig}/{encode(link, safe=true)}"
+  else:
+    &"{cdnUrl}/video/{sig}/{encodeUrl(link)}"
 
 proc getPicUrl*(link: string): string =
+  let sig = getHmac(link)
   if base64Media:
-    &"/pic/enc/{encode(link, safe=true)}"
+    &"{cdnUrl}/pic/enc/{sig}/{encode(link, safe=true)}"
   else:
-    &"/pic/{encodeUrl(link)}"
+    &"{cdnUrl}/pic/{sig}/{encodeUrl(link)}"
 
 proc getOrigPicUrl*(link: string): string =
+  let sig = getHmac(link)
   if base64Media:
-    &"/pic/orig/enc/{encode(link, safe=true)}"
+    &"{cdnUrl}/pic/orig/enc/{sig}/{encode(link, safe=true)}"
   else:
-    &"/pic/orig/{encodeUrl(link)}"
+    &"{cdnUrl}/pic/orig/{sig}/{encodeUrl(link)}"
 
 proc filterParams*(params: Table): seq[(string, string)] =
   for p in params.pairs():
diff --git a/src/views/general.nim b/src/views/general.nim
index 5ba40a3..69ba668 100644
--- a/src/views/general.nim
+++ b/src/views/general.nim
@@ -102,7 +102,7 @@ proc renderHead*(prefs: Prefs; cfg: Config; req: Request; titleText=""; desc="";
                        else: getSmallPic(url)
       link(rel="preload", type="image/png", href=preloadUrl, `as`="image")
 
-      let image = getUrlPrefix(cfg) & getPicUrl(url)
+      let image = getPicUrl(url)
       meta(property="og:image", content=image)
       meta(property="twitter:image:src", content=image)
 
diff --git a/src/views/rss.nimf b/src/views/rss.nimf
index 036a7b9..e29b070 100644
--- a/src/views/rss.nimf
+++ b/src/views/rss.nimf
@@ -39,19 +39,19 @@ Twitter feed for: ${desc}. Generated by ${cfg.hostname}
 #end if
 #if tweet.photos.len > 0:
 #  for photo in tweet.photos:
-<img src="${urlPrefix}${getPicUrl(photo)}" style="max-width:250px;" />
+<img src="${getPicUrl(photo)}" style="max-width:250px;" />
 #  end for
 #elif tweet.video.isSome:
-<img src="${urlPrefix}${getPicUrl(get(tweet.video).thumb)}" style="max-width:250px;" />
+<img src="${getPicUrl(get(tweet.video).thumb)}" style="max-width:250px;" />
 #elif tweet.gif.isSome:
-#  let thumb = &"{urlPrefix}{getPicUrl(get(tweet.gif).thumb)}"
-#  let url = &"{urlPrefix}{getPicUrl(get(tweet.gif).url)}"
+#  let thumb = &"{getPicUrl(get(tweet.gif).thumb)}"
+#  let url = &"{getPicUrl(get(tweet.gif).url)}"
 <video poster="${thumb}" autoplay muted loop style="max-width:250px;">
   <source src="${url}" type="video/mp4"></video>
 #elif tweet.card.isSome:
 #  let card = tweet.card.get()
 #  if card.image.len > 0:
-<img src="${urlPrefix}${getPicUrl(card.image)}" style="max-width:250px;" />
+<img src="${getPicUrl(card.image)}" style="max-width:250px;" />
 #  end if
 #end if
 #end proc
@@ -102,7 +102,7 @@ Twitter feed for: ${desc}. Generated by ${cfg.hostname}
     <image>
       <title>${title}</title>
       <link>${urlPrefix}/${profile.user.username}</link>
-      <url>${urlPrefix}${getPicUrl(profile.user.getUserPic(style="_400x400"))}</url>
+      <url>${getPicUrl(profile.user.getUserPic(style="_400x400"))}</url>
       <width>128</width>
       <height>128</height>
     </image>
-- 
2.48.0

