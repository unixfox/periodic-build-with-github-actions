name: Docker build moco image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
  push:
    paths:
      - '.github/workflows/docker-build-moco.yml'
      - 'moco/**'

jobs:

  build:

    runs-on: ${{ (github.event_name == 'push') && fromJSON('[ "buildjet-4vcpu-ubuntu-2204-arm" ]') || 'ubuntu-latest' }}

    steps:      
      - name: Get latest tag
        id: get-latest-tag
        run: |
          echo "tag=$(git ls-remote --refs --tags https://github.com/cybozu-go/moco.git|cut --delimiter='/' --fields=3|sort --version-sort|tail --lines=1)" >> $GITHUB_ENV
        shell: bash

      - uses: actions/cache@v4
        id: cache
        with:
          path: moco
          key: ${{ runner.os }}-${{ env.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: arm64

      - name: Check Out Repo
        uses: actions/checkout@v3
          
      - name: Check Out Repo cybozu-go/moco
        uses: actions/checkout@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "cybozu-go/moco"
          ref: '${{ env.tag }}'
          path: 'moco-git'
      
      - name: Login to Quay.io
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Set up build timestamp
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo "timestamp=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Build and push docker image for controller
        if: steps.cache.outputs.cache-hit != 'true'
        id: docker_build_controller
        uses: docker/build-push-action@v3
        with:
          context: ./moco-git
          file: ./moco/Dockerfile.controller
          platforms: linux/arm64
          push: true
          tags: quay.io/unixfox/moco-controller:latest, quay.io/unixfox/moco-controller:${{ env.tag }}, quay.io/unixfox/moco-controller:${{ env.tag }}-build-${{ env.timestamp }}
      
      - name: Build and push docker image for backup
        if: steps.cache.outputs.cache-hit != 'true'
        id: docker_build_backup
        uses: docker/build-push-action@v3
        with:
          context: ./moco-git
          file: ./moco/Dockerfile.backup
          platforms: linux/arm64
          push: true
          tags: quay.io/unixfox/moco-backup:latest, quay.io/unixfox/moco-backup:${{ env.tag }}, quay.io/unixfox/moco-backup:${{ env.tag }}-build-${{ env.timestamp }}